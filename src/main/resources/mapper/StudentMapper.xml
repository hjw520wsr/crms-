<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="entity.Student" >
    <id column="s_id" property="sId" jdbcType="INTEGER" />
    <result column="s_num" property="sNum" jdbcType="VARCHAR" />
    <result column="s_name" property="sName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="institute" property="institute" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    s_id, s_num, s_name, password, sex, tel, institute, major
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="entity.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student
    where s_id = #{sId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where s_id = #{sId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entity.StudentExample" >
    delete from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.Student" >
    insert into student (s_id, s_num, s_name, 
      password, sex, tel, 
      institute, major)
    values (#{sId,jdbcType=INTEGER}, #{sNum,jdbcType=VARCHAR}, #{sName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{institute,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="entity.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sId != null" >
        s_id,
      </if>
      <if test="sNum != null" >
        s_num,
      </if>
      <if test="sName != null" >
        s_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="institute != null" >
        institute,
      </if>
      <if test="major != null" >
        major,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sId != null" >
        #{sId,jdbcType=INTEGER},
      </if>
      <if test="sNum != null" >
        #{sNum,jdbcType=VARCHAR},
      </if>
      <if test="sName != null" >
        #{sName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="institute != null" >
        #{institute,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        #{major,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.StudentExample" resultType="java.lang.Integer" >
    select count(*) from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student
    <set >
      <if test="record.sId != null" >
        s_id = #{record.sId,jdbcType=INTEGER},
      </if>
      <if test="record.sNum != null" >
        s_num = #{record.sNum,jdbcType=VARCHAR},
      </if>
      <if test="record.sName != null" >
        s_name = #{record.sName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.institute != null" >
        institute = #{record.institute,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null" >
        major = #{record.major,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student
    set s_id = #{record.sId,jdbcType=INTEGER},
      s_num = #{record.sNum,jdbcType=VARCHAR},
      s_name = #{record.sName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      institute = #{record.institute,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Student" >
    update student
    <set >
      <if test="sNum != null" >
        s_num = #{sNum,jdbcType=VARCHAR},
      </if>
      <if test="sName != null" >
        s_name = #{sName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="institute != null" >
        institute = #{institute,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=VARCHAR},
      </if>
    </set>
    where s_id = #{sId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Student" >
    update student
    set s_num = #{sNum,jdbcType=VARCHAR},
      s_name = #{sName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      institute = #{institute,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR}
    where s_id = #{sId,jdbcType=INTEGER}
  </update>
  <insert id="insertInfoBatch" parameterType="java.util.List">  
    insert into student (s_id, s_num,s_name, password, sex, tel, institute,  
      major)  
    values  
 	<foreach collection="list" item="item" index="index" separator=",">  
      (#{item.sId}, #{item.sNum}, #{item.sName},#{item.password},  
      #{item.sex}, #{item.tel},#{item.institute}, #{item.major})  
    </foreach>  
</insert>
</mapper>